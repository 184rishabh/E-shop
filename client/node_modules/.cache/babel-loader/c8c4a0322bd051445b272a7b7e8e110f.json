{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.quantity += 1;\n      const itemindex = state.products.findIndex(item => item._id === action.payload._id);\n\n      if (itemindex >= 0) {\n        state.products[itemindex].cartquantity += 1;\n      } else {\n        const temp = { ...action.payload,\n          cartquantity: 1\n        };\n        state.products.push(temp);\n      }\n\n      state.products.push(action.payload.item);\n    }\n  }\n});\nexport const {\n  addProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/rishabh/Desktop/ecommerce/src/components/redux/cartredux.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","reducers","addProduct","state","action","itemindex","findIndex","item","_id","payload","cartquantity","temp","push","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAED,WAAW,CAAC;AAEzBE,EAAAA,IAAI,EAAC,MAFoB;AAGzBC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAC,EADA;AAETC,IAAAA,QAAQ,EAAC;AAFA,GAHY;AAOzBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACvBD,MAAAA,KAAK,CAACH,QAAN,IAAgB,CAAhB;AACA,YAAMK,SAAS,GAACF,KAAK,CAACJ,QAAN,CAAeO,SAAf,CACXC,IAAD,IAASA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeD,GADzB,CAAhB;;AAGA,UAAGH,SAAS,IAAE,CAAd,EACA;AACIF,QAAAA,KAAK,CAACJ,QAAN,CAAeM,SAAf,EAA0BK,YAA1B,IAAwC,CAAxC;AACH,OAHD,MAII;AACA,cAAMC,IAAI,GAAC,EAAC,GAAGP,MAAM,CAACK,OAAX;AAAmBC,UAAAA,YAAY,EAAC;AAAhC,SAAX;AACAP,QAAAA,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBD,IAApB;AACH;;AACDR,MAAAA,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBR,MAAM,CAACK,OAAP,CAAeF,IAAnC;AACH;AAfI;AAPgB,CAAD,CAA5B;AA0BA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAgBN,SAAS,CAACiB,OAAhC;AACP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst cartSlice =createSlice({\n\n    name:\"cart\",\n    initialState:{\n        products:[],\n        quantity:0,\n    },\n    reducers:{\n        addProduct:(state,action)=>{\n            state.quantity+=1;\n            const itemindex=state.products.findIndex(\n                (item)=> item._id === action.payload._id\n            );\n            if(itemindex>=0)\n            {\n                state.products[itemindex].cartquantity+=1;\n            }\n            else{\n                const temp={...action.payload,cartquantity:1};\n                state.products.push(temp);\n            }\n            state.products.push(action.payload.item);\n        },\n    },\n})\n\nexport const { addProduct } =cartSlice.actions;\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}