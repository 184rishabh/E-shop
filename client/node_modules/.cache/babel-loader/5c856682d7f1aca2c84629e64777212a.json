{"ast":null,"code":"var _jsxFileName = \"/Users/rishabh/Desktop/ecommerce/src/account/userupdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { isauthenticated } from '../auth/authenticate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction USERUPDATE() {\n  _s();\n\n  const [newpass, setnewpass] = useState();\n  const user = isauthenticated();\n  const id = user.user._id;\n  console.log(user.token);\n\n  const updatepassword = user => {\n    return fetch(`http://localhost:5000/api/user/${id}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: 'application/json',\n        \"content-type\": \"application/json\",\n        token: `Bearer ${user.token}`\n      },\n      body: JSON.stringify(user)\n    }).then(response => {\n      return response.json();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const clickupdate = () => {\n    updatepassword({\n      username: user.user.username,\n      password: newpass\n    }).then(data => {\n      if (data) {\n        console.log(data);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-2\",\n      children: \"You can update your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputPassword\",\n            class: \"form-label\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setnewpass(e.target.value),\n            value: newpass,\n            type: \"password\",\n            id: \"inputPassword\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-text\",\n            children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clickupdate,\n            className: \"btn btn-primary mt-3\",\n            children: \"set password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(USERUPDATE, \"huna4XtJNYWLbguwQ8WP9AhY2No=\");\n\n_c = USERUPDATE;\nexport default USERUPDATE;\n\nvar _c;\n\n$RefreshReg$(_c, \"USERUPDATE\");","map":{"version":3,"sources":["/Users/rishabh/Desktop/ecommerce/src/account/userupdate.js"],"names":["React","useState","isauthenticated","USERUPDATE","newpass","setnewpass","user","id","_id","console","log","token","updatepassword","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","clickupdate","username","password","data","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,eAAT,QAAgC,sBAAhC;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAElB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;AACA,QAAMK,IAAI,GAACJ,eAAe,EAA1B;AACA,QAAMK,EAAE,GAACD,IAAI,CAACA,IAAL,CAAUE,GAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,KAAjB;;AAEA,QAAMC,cAAc,GAAEN,IAAD,IAAQ;AACzB,WAAOO,KAAK,CAAE,kCAAiCN,EAAG,EAAtC,EAAwC;AAChDO,MAAAA,MAAM,EAAC,KADyC;AAEhDC,MAAAA,OAAO,EAAC;AACJC,QAAAA,MAAM,EAAC,kBADH;AAEJ,wBAAe,kBAFX;AAGJL,QAAAA,KAAK,EAAE,UAASL,IAAI,CAACK,KAAM;AAHvB,OAFwC;AAOhDM,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAP2C,KAAxC,CAAL,CAQJc,IARI,CAQCC,QAAQ,IAAE;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAVM,EAUJC,KAVI,CAUEC,GAAG,IAAE;AACVf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACH,KAZM,CAAP;AAaH,GAdD;;AAgBA,QAAMC,WAAW,GAAC,MAAI;AACnBb,IAAAA,cAAc,CAAC;AAACc,MAAAA,QAAQ,EAACpB,IAAI,CAACA,IAAL,CAAUoB,QAApB;AAA6BC,MAAAA,QAAQ,EAACvB;AAAtC,KAAD,CAAd,CAA+DgB,IAA/D,CAAoEQ,IAAI,IAAE;AACrE,UAAGA,IAAH,EACA;AACInB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAZ;AAEH;AAEL,KAPD;AAQF,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACG;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACK;AAAO,YAAA,GAAG,EAAC,eAAX;AAA2B,YAAA,KAAK,EAAC,YAAjC;AAAA,mCAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,kBADL,eAEK;AAAO,YAAA,QAAQ,EAAGC,CAAD,IAAOxB,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlC;AAAoD,YAAA,KAAK,EAAG3B,OAA5D;AAAqE,YAAA,IAAI,EAAC,UAA1E;AAAqF,YAAA,EAAE,EAAC,eAAxF;AAAwG,YAAA,SAAS,EAAC;AAAlH;AAAA;AAAA;AAAA;AAAA,kBAFL,eAGK;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHL,eAMK;AAAQ,YAAA,OAAO,EAAEqB,WAAjB;AAA8B,YAAA,SAAS,EAAC,sBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GApDQtB,U;;KAAAA,U;AAsDT,eAAeA,UAAf","sourcesContent":["import React,{useState} from 'react'\nimport { isauthenticated } from '../auth/authenticate'\n\nfunction USERUPDATE() {\n\n    const [newpass, setnewpass] = useState()\n    const user=isauthenticated()\n    const id=user.user._id\n    console.log(user.token)\n\n    const updatepassword=(user)=>{\n        return fetch(`http://localhost:5000/api/user/${id}`,{\n            method:\"PUT\",\n            headers:{\n                Accept:'application/json',\n                \"content-type\":\"application/json\",\n                token:`Bearer ${user.token}`\n            },\n            body:JSON.stringify(user)\n        }).then(response=>{\n            return response.json();\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n    \n    const clickupdate=()=>{\n       updatepassword({username:user.user.username,password:newpass}).then(data=>{\n            if(data)\n            {\n                console.log(data)\n                \n            }\n           \n       })\n    }\n\n    return (\n        <div className=\"mt-5\">\n           <h1 className=\"mt-2\">You can update your password</h1>\n           <div className=\"container mt-5\">\n               <div className=\"row justify-content-center\">\n                   <div className=\"col-md-5\">\n                        <label for=\"inputPassword\" class=\"form-label\"><h3>Password</h3></label>\n                        <input onChange={(e) => setnewpass(e.target.value)} value ={newpass} type=\"password\" id=\"inputPassword\" className=\"form-control\"/>\n                        <div className=\"form-text\">\n                                Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\n                        </div>\n                        <button onClick={clickupdate} className=\"btn btn-primary mt-3\">set password</button>\n                   </div>\n               </div>\n\n           </div>\n        </div>\n    )\n}\n\nexport default USERUPDATE\n"]},"metadata":{},"sourceType":"module"}